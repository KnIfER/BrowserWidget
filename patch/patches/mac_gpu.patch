diff --git ui/gl/init/gl_initializer_mac.cc ui/gl/init/gl_initializer_mac.cc
index f4789ebf3b0e..73d66e8f5165 100644
--- ui/gl/init/gl_initializer_mac.cc
+++ ui/gl/init/gl_initializer_mac.cc
@@ -47,11 +47,8 @@ bool InitializeOneOffForSandbox() {
   // GPU-related stuff is very slow without this, probably because
   // the sandbox prevents loading graphics drivers or some such.
   std::vector<CGLPixelFormatAttribute> attribs;
-  if (GLContext::SwitchableGPUsSupported()) {
-    // Avoid switching to the discrete GPU just for this pixel
-    // format selection.
-    attribs.push_back(kCGLPFAAllowOfflineRenderers);
-  }
+  // Avoid switching to the discrete GPU just for this pixel format selection.
+  attribs.push_back(kCGLPFAAllowOfflineRenderers);
   if (GetGLImplementation() == kGLImplementationAppleGL) {
     attribs.push_back(kCGLPFARendererID);
     attribs.push_back(
@@ -146,8 +143,8 @@ bool InitializeStaticEGLInternal(GLImplementation implementation) {
   // as app bundles. In that case, the .dylib is next to the executable.
   base::FilePath base_dir;
   if (base::mac::AmIBundled()) {
-    base_dir =
-        base::mac::FrameworkBundlePath().Append("Versions/Current/Libraries/");
+    // Rely on symlinks to find the correct version.
+    base_dir = base::mac::FrameworkBundlePath().Append("Libraries/");
   } else {
     if (!base::PathService::Get(base::FILE_EXE, &base_dir)) {
       LOG(ERROR) << "PathService::Get failed.";
